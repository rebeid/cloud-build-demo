steps:
  # Build app
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 
           'us-central1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/myimage', 
           './app']

  # Push app
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 
           'us-central1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/myimage']

  # Provision VM and deploy app
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    timeout: 240s
    args: ['compute', 'instances', 
           'create-with-container', 'my-instance',
           '--container-image', 
           'us-central1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/myimage']
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1'
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'

  # Create firewall rule to open port 8090
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: ['compute', 'firewall-rules',
           'create', 'allow-8090',
           '--allow tcp:8090',
           '--source-ranges=0.0.0.0/0',
           '--destinatione-ranges=0.0.0.0/0']

serviceAccount: '${SERVICE_ACCOUNT}'
options:
  machineType: 'E2_MEDIUM'
  logging: CLOUD_LOGGING_ONLY